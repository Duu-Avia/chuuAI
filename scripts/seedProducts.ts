import mongoose from 'mongoose';
import { config } from 'dotenv';
config();

// üîó –¢–∞–Ω—ã .env –¥–æ—Ç–æ—Ä MONGO_URI –±–∞–π—Ö —ë—Å—Ç–æ–π
const MONGO_URI = process.env.MONGO_URI || '';

// ‚úÖ Product schema
const productSchema = new mongoose.Schema({
  name: String,
  description: String,
  price: Number,
  stock: Number,
});

const Product = mongoose.model('Product', productSchema);

// ‚úÖ MongoDB-–¥ —Ö–æ–ª–±–æ–≥–¥–æ—Ö
async function seed() {
  try {
    await mongoose.connect(MONGO_URI);
    console.log('üì¶ MongoDB —Ö–æ–ª–±–æ–≥–¥–ª–æ–æ');

    // üîÑ –•—É—É—á–∏–Ω –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω“Ø“Ø–¥–∏–π–≥ —É—Å—Ç–≥–∞—Ö (—Ö“Ø—Å–≤—ç–ª)
    await Product.deleteMany();

    // üß™ –®–∏–Ω—ç –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω“Ø“Ø–¥ –Ω—ç–º—ç—Ö
    await Product.insertMany([
      {
        name: '–•—ç—Ç—ç ”©–≤–ª–∏–π–Ω –∫—É—Ä—Ç–∏–∫',
        description: '–•“Ø–π—Ç—ç–Ω–¥ —Ç–æ—Ö–∏—Ä–æ–º–∂—Ç–æ–π —É—Å–Ω—ã —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç—Ç–∞–π –∫—É—Ä—Ç–∏–∫',
        price: 150000,
        stock: 12,
      },
      {
        name: '–ù–∏–º–≥—ç–Ω —Ö–∞–≤—Ä—ã–Ω –∫—É—Ä—Ç–∏–∫',
        description: '–•–∞–≤—Ä—ã–Ω —É–ª–∏—Ä–∞–ª–¥ –∑–æ—Ä–∏—É–ª—Å–∞–Ω –Ω–∏–º–≥—ç–Ω –∫—É—Ä—Ç–∏–∫',
        price: 95000,
        stock: 5,
      },
      {
        name: '–£—Å–Ω—ã –≥—É—Ç–∞–ª',
        description: '–¶–∞—Å—Ç–∞–π, —à–∞–≤–∞—Ä—Ç–∞–π “Ø–µ–¥ ”©–º—Å”©—Ö —É—Å–Ω—ã –≥—É—Ç–∞–ª',
        price: 70000,
        stock: 0,
      },
    ]);

    console.log('‚úÖ –ë“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω“Ø“Ø–¥ –Ω—ç–º—ç–≥–¥–ª—ç—ç');
    process.exit(0);
  } catch (err) {
    console.error('‚ùå –ê–ª–¥–∞–∞:', err);
    process.exit(1);
  }
}

seed();
